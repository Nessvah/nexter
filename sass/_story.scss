@use "base" as *;

.story {
  &__pictures {
    background-color: var(--color-primary);
    grid-column: full-start / col-end 4;

    /* If we want to specify and control individual R, G and B values with rgba(),
    you will need to specify a variable for each color component as a decimal 
    value, and reference each variable within the rgba() function. */

    //we can also use scss variables and it will work
    background-image: linear-gradient(rgba(#c69963, 0.5), rgba(#c69963, 0.5)),
      url(/img/back.jpg);
    background-size: cover;
    display: grid;
    grid-template-rows: repeat(6, 1fr);
    grid-template-columns: repeat(6, 1fr);
    align-items: center; // center the imgs in the grid area

    @media only screen and (max-width: $breakpoint-m) {
      grid-column: 1 / -1;
      padding: 3rem;
    }
  }

  &__img {
    width: 100%;

    &--1 {
      //imgs behave different and dont occupy all the grid-area so we need to center it
      grid-row: 2 / 6;
      grid-column: 2 / 6;
      box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.1);

      @media only screen and (max-width: $breakpoint-m) {
        grid-column: 1 / 5;
        grid-row: 1 / -1;
      }
    }

    &--2 {
      grid-row: 4 / 6;
      grid-column: 4 / 7;
      width: 115%; //so that the img overlaps the container
      z-index: 50;
      box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.3);

      @media only screen and (max-width: $breakpoint-m) {
        grid-row: 1 / -1;
        width: 100%;
      }
    }
  }

  &__content {
    background-color: var(--color-grey-light-1);
    grid-column: col-start 5 / full-end;
    padding: 6rem 8vw;

    /* 
    OPTION WITH FLEXBOX:
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start; */

    //OPTION WITH GRID: two options same output

    display: grid;
    align-content: center;
    justify-items: start;

    @media only screen and (max-width: $breakpoint-m) {
      grid-column: 1 / -1;
      grid-row: 5 / 6;
    }
  }

  &__text {
    font-size: 1.5rem;
    font-style: italic;
    margin-bottom: 4rem;
  }
}
